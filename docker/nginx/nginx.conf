# 起点となる設定ファイルで、他の設定ファイルはここから読み込まれる
user  nginx;
worker_processes  auto;

# エラーログの出力先とログレベル(debug, info, notice, warn, error, crit, alert, emerg が設定可能)(標準出力/標準エラー出力のスペシャルファイルへのシンボリックリンクとなっているのでdocker-compose logsで確認)
error_log  /var/log/nginx/error.log warn; # warn, error, crit, alert と emerg レベルのメッセージが記録
# プロセスIDの記載先となるPIDファイルの格納先の指定
pid        /var/run/nginx.pid;


events {
    # worker_connections とにて、イベントループを行う worker プロセスで同時に受付可能な接続数を定義
    worker_connections  1024;
}


http {
    # MIMEタイプのマッピングファイルのインクルード
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # アクセスログのフォーマット
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # アクセスログに出力場所を定義(標準出力/標準エラー出力のスペシャルファイルへのシンボリックリンクとなっているのでdocker-compose logsで確認)
    access_log  /var/log/nginx/access.log  main;

    # クライアントへのレスポンス処理をsendfileシステムコールというAPIを使って行う設定
    sendfile        on;
    # レスポンスヘッダとファイルの内容をまとめて送るようする設定
    #tcp_nopush     on;

    # サーバのkeepaliveタイムアウト秒数を設定
    keepalive_timeout  65;

    # gzip圧縮通信
    #gzip  on;

    # 別の設定ファイルを読み込み
    include /etc/nginx/conf.d/*.conf;
}